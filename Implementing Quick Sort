Implementing Quick Sort
Given an array A[] of size N, containing positive integers. You need to sort the elements of array using the Quick sort algorithm.

Input Format
The first line of input N is the size of array and the second line consists of N array elements separated by space.

Output Format
Print the sorted array in a new line.

Example 1
Input

5
4 1 3 9 7
Output

1 3 4 7 9 
Explanation

The array after perfoming Quick sort: 1 3 4 7 9.

Example 2
Input

10
10 9 8 7 6 5 4 3 2 1
Output

1 2 3 4 5 6 7 8 9 10
Explanation

The array after performing Quick sort: 1 2 3 4 5 6 7 8 9 10.

Constraints
1 <= N <= 10^5

-10^6 <= A[i] <= 10^6

Topics
Sorting



import java.util.*;
import java.io.*;

class Solution{
	static void quickSort(int[] arr, int low, int high) {
    if (low < high) {
        int pdx = partition(arr, low, high);
        quickSort(arr, low, pdx - 1);
        quickSort(arr, pdx + 1, high);
    }
}

static int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) {
            i++;
            int temp = arr[j];
            arr[j] = arr[i];
            arr[i] = temp;
        }
    }
    int temp = arr[i + 1];
    arr[i + 1] = arr[high];
    arr[high] = temp;
    return i + 1;
}
}

public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n;
        n = sc.nextInt();
        int arr[] = new int[n];
        for (int i = 0; i < n; i++)
            arr[i] = sc.nextInt();
        Solution Obj = new Solution();
        Obj.quickSort(arr, 0, n - 1); 
        for (int i = 0; i < n; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
        sc.close();
    }
}
