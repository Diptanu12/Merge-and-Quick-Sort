Implementing Merge Sort
Given an array A[] of size N, containing positive integers. You need to sort the elements of array using the merge sort algorithm.

Input
The input consists of two lines.

The first line of input is the size of array N and the second line consists of N array elements separated by space.

Output
Print the sorted array in a new line.

Example 1
Input

5
4 1 3 9 7
Output

1 3 4 7 9 
Explanation

The array after performing merge sort: 1 3 4 7 9.

Example 2
Input

10
10 9 8 7 6 5 4 3 2 1
Output

1 2 3 4 5 6 7 8 9 10
Explanation

The array after performing merge sort: 1 2 3 4 5 6 7 8 9 10.

Constraints
1 <= N <= 10^5

-10^6 <= A[i] <= 10^6

Topics
Sorting

import java.util.*;
import java.io.*;

class Solution {
static void mergeSort(int[] arr,int si,int ei){
     // Your code here
    if(si>=ei){
        return;
    }
    int mid=si+(ei-si)/2;
    mergeSort(arr, si,mid);
    mergeSort(arr,mid+1,ei);
    conquer(arr, si, mid,ei);
        }
    static void conquer(int arr[], int si, int mid, int ei){
        int merged[]=new int[ei-si+1];

        int idx1=si;
        int idx2=mid+1;
        int x=0;
        while(idx1<=mid && idx2<=ei){
            if(arr[idx1]<=arr[idx2]){
                merged[x++]=arr[idx1++];
            }else{
                merged[x++]=arr[idx2++];
            }
        }
        while(idx1<=mid ){
            merged[x++]=arr[idx1++];
        }
         while(idx2<=ei ){
            merged[x++]=arr[idx2++];
        }
        for(int i=0;i<merged.length;i++){
            arr[si+i]=merged[i];
        }
    }
}
public class Main {
    public static void main(String args[]) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        int[] a=new int[n];
        for(int i= 0; i < n; i++)
            a[i] = input.nextInt();
        Solution Obj = new Solution();
        Obj.mergeSort(a,0,n-1);
        for (int i = 0; i < n; i++)
            System.out.print(a[i] + " ");
    }
}
